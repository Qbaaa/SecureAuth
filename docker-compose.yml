services:
  postgres:
    image: postgres:17.4-alpine
    container_name: postgres
    hostname: postgres
    profiles: [ "db" ]
    restart: always
    ports:
#      - "host_port:container_port"
      - "127.0.0.1:25432:5432"
    env_file:
      - ./.docker/env/db/${APP_ENV}.env
    secrets:
      - secureauth.db.password
    volumes:
      - stockprices_data:/var/lib/postgresql/data
      - ./.docker/sql-scripts:/docker-entrypoint-initdb.d
    networks:
      - stockprices_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U stockpriceuser -d predictstockprices_db" ]
      interval: 10s
      retries: 5
      start_period: 5s

  mail:
    container_name: mail
    image: axllent/mailpit
    networks:
      - stockprices_network
    ports:
      - '8125:8025'
      - '1125:1025'

  secureauth:
    build:
      context: .
      dockerfile: .docker/secureauth.dockerfile
    container_name: secureauth
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    env_file:
      - ./.docker/env/secureauth/${APP_ENV}.env
    secrets:
      - secureauth.db.password
    networks:
      - stockprices_network
    command:
      - sh
      - -c
      - java -jar /home/appuser/app/authsecure.jar

volumes:
  stockprices_data:

networks:
  stockprices_network:
    driver: bridge

secrets:
  secureauth.db.password:
    file: ./.docker/secrets/${SECRET_ENV}/secureauth/db.password.txt